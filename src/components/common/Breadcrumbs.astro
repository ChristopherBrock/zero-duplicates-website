---
// File: components/common/Breadcrumbs.astro
import { getLocaleFromUrl } from '../../i18n/ui';
import { translations } from '../../i18n/translations';

interface Props {
  items: {
    name: string;
    href: string;
  }[];
}

const { items } = Astro.props;
const currentLang = getLocaleFromUrl(Astro.url);
const t = translations[currentLang];

// Build Schema.org breadcrumb data
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "item": {
      "@id": `https://zeroduplicates.com${item.href}`,
      "name": item.name
    }
  }))
};
---

<nav aria-label="Breadcrumb" class="py-4">
  <ol class="flex items-center space-x-2 text-sm">
    {items.map((item, index) => (
      <li class="flex items-center">
        {index > 0 && (
          <svg
            class="mx-2 h-4 w-4 text-text-tertiary"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M9 5l7 7-7 7"
            />
          </svg>
        )}
        <a
          href={item.href}
          class={`${
            index === items.length - 1
              ? 'text-text-primary font-medium'
              : 'text-text-secondary hover:text-swift-blue'
          } transition-colors`}
        >
          {item.name}
        </a>
      </li>
    ))}
  </ol>
</nav>

<!-- Inject schema markup -->
<script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />