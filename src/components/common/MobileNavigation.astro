---
// File: components/common/MobileNavigation.astro
import { getLocaleFromUrl } from '../../i18n/ui';
import { translations } from '../../i18n/translations';
import { appLinks } from '../../utils/constants';

const currentLang = getLocaleFromUrl(Astro.url);
const t = translations[currentLang];

const navigationItems = [
  { href: `/${currentLang}#features`, label: t.nav.features },
  { href: `/${currentLang}#faq`, label: t.nav.faq },
  { href: "/privacy", label: t.footer.privacy },
  { href: "/terms", label: t.footer.terms },
  { href: "/imprint", label: t.footer.imprint },
];

// Get the correct store badge based on language
const storeBadge = currentLang === 'en' ? '/images/en_store.svg' : '/images/de_store.svg';
---

<div
  id="mobile-menu"
  class="fixed inset-0 z-50 transform translate-x-full transition-transform duration-200 ease-in-out"
  aria-hidden="true"
>
  {/* Backdrop with strong blur */}
  <div class="absolute inset-0 bg-background/98 backdrop-blur-xl"></div>
  
  {/* Content */}
  <div class="relative h-full">
    <div class="container-width h-full">
      <div class="flex flex-col h-full py-6">
        {/* Close button */}
        <button
          id="mobile-menu-close"
          class="self-end p-2 text-text-secondary hover:text-swift-blue transition-colors"
          aria-label="Close menu"
        >
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>

        {/* Navigation items */}
        <nav class="flex-grow flex items-center">
          <ul class="w-full space-y-8 pt-8">
            {navigationItems.map(item => (
              <li class="text-center">
                <a
                  href={item.href}
                  class="text-xl font-medium text-text-secondary hover:text-swift-blue transition-colors"
                >
                  {item.label}
                </a>
              </li>
            ))}
            <li class="text-center pt-8">
              <a 
                href={appLinks.appStore}
                class="inline-block transition-opacity hover:opacity-90"
                target="_blank"
                rel="noopener noreferrer"
                aria-label={t.nav.download}
              >
                <img 
                  src={storeBadge}
                  alt={t.nav.download}
                  class="h-[44px] w-auto mx-auto"
                  width="156"
                  height="44"
                />
              </a>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </div>
</div>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const closeButton = document.getElementById('mobile-menu-close');
  let isOpen = false;

  function toggleMenu() {
    isOpen = !isOpen;
    if (mobileMenu && mobileMenuButton) {
      mobileMenu.style.transform = isOpen ? 'translateX(0)' : 'translateX(100%)';
      mobileMenuButton.setAttribute('aria-expanded', isOpen.toString());
      document.body.style.overflow = isOpen ? 'hidden' : '';
    }
  }

  mobileMenuButton?.addEventListener('click', toggleMenu);
  closeButton?.addEventListener('click', toggleMenu);

  // Close menu when clicking on a link
  mobileMenu?.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', () => {
      if (isOpen) toggleMenu();
    });
  });

  // Close menu on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && isOpen) {
      toggleMenu();
    }
  });
</script>